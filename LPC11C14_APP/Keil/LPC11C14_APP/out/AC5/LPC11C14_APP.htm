<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\out\AC5\LPC11C14_APP.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\out\AC5\LPC11C14_APP.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Tue May 26 09:25:11 2020
<BR><P>
<H3>Maximum Stack Usage =        312 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; LoopForFrameFromController &rArr; ParseFrameFromController &rArr; DispalyUpdate &rArr; SetFuncPosition &rArr; SendFrameToMPU &rArr; LoopForFrameToMPU &rArr; IOUART_Send &rArr; IOUARTCharPut
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[17]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17]">NMI_Handler</a><BR>
 <LI><a href="#[18]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">HardFault_Handler</a><BR>
 <LI><a href="#[19]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[19]">MemManage_Handler</a><BR>
 <LI><a href="#[1a]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">BusFault_Handler</a><BR>
 <LI><a href="#[1b]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">UsageFault_Handler</a><BR>
 <LI><a href="#[1c]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">SVC_Handler</a><BR>
 <LI><a href="#[1d]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">DebugMon_Handler</a><BR>
 <LI><a href="#[1e]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">PendSV_Handler</a><BR>
 <LI><a href="#[1f]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">SysTick_Handler</a><BR>
 <LI><a href="#[2c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2c]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[2c]">ADC_IRQHandler</a> from startup_LPC11xx.o(.text) referenced from startup_LPC11xx.o(RESET)
 <LI><a href="#[2e]">BOD_IRQHandler</a> from startup_LPC11xx.o(.text) referenced from startup_LPC11xx.o(RESET)
 <LI><a href="#[1a]">BusFault_Handler</a> from startup_LPC11xx.o(.text) referenced from startup_LPC11xx.o(RESET)
 <LI><a href="#[21]">CAN_IRQHandler</a> from DrvCAN.o(.text) referenced from startup_LPC11xx.o(RESET)
 <LI><a href="#[6]">Callback_ARROW_2_Changed</a> from logic.o(.text) referenced 2 times from logic.o(.data)
 <LI><a href="#[3]">Callback_ARROW_Changed</a> from logic.o(.text) referenced 2 times from logic.o(.data)
 <LI><a href="#[a]">Callback_AUDIO_Changed</a> from logic.o(.text) referenced 2 times from logic.o(.data)
 <LI><a href="#[10]">Callback_BACKGROUND_Changed</a> from logic.o(.text) referenced 2 times from logic.o(.data)
 <LI><a href="#[15]">Callback_COPPAD_Changed</a> from logic.o(.text) referenced 2 times from logic.o(.data)
 <LI><a href="#[f]">Callback_DATETIME_Changed</a> from logic.o(.text) referenced 2 times from logic.o(.data)
 <LI><a href="#[5]">Callback_FLOOR_2_Changed</a> from logic.o(.text) referenced 2 times from logic.o(.data)
 <LI><a href="#[2]">Callback_FLOOR_Changed</a> from logic.o(.text) referenced 2 times from logic.o(.data)
 <LI><a href="#[13]">Callback_FLRPAD_Changed</a> from logic.o(.text) referenced 2 times from logic.o(.data)
 <LI><a href="#[7]">Callback_FUNCTION_2_Changed</a> from logic.o(.text) referenced 2 times from logic.o(.data)
 <LI><a href="#[4]">Callback_FUNCTION_Changed</a> from logic.o(.text) referenced 2 times from logic.o(.data)
 <LI><a href="#[9]">Callback_IMAGE_Changed</a> from logic.o(.text) referenced 2 times from logic.o(.data)
 <LI><a href="#[d]">Callback_LOADCAPACITY_Changed</a> from logic.o(.text) referenced 2 times from logic.o(.data)
 <LI><a href="#[e]">Callback_LOGO_Changed</a> from logic.o(.text) referenced 2 times from logic.o(.data)
 <LI><a href="#[14]">Callback_LOPPAD_Changed</a> from logic.o(.text) referenced 2 times from logic.o(.data)
 <LI><a href="#[0]">Callback_LUMINARY_Changed</a> from logic.o(.text) referenced 2 times from logic.o(.data)
 <LI><a href="#[c]">Callback_PERSON_Changed</a> from logic.o(.text) referenced 2 times from logic.o(.data)
 <LI><a href="#[12]">Callback_TEMPERATURE_Changed</a> from logic.o(.text) referenced 2 times from logic.o(.data)
 <LI><a href="#[b]">Callback_TEXT_Changed</a> from logic.o(.text) referenced 2 times from logic.o(.data)
 <LI><a href="#[8]">Callback_VIDEO_Changed</a> from logic.o(.text) referenced 2 times from logic.o(.data)
 <LI><a href="#[1]">Callback_VOLUME_Changed</a> from logic.o(.text) referenced 2 times from logic.o(.data)
 <LI><a href="#[11]">Callback_WEATHER_Changed</a> from logic.o(.text) referenced 2 times from logic.o(.data)
 <LI><a href="#[1d]">DebugMon_Handler</a> from startup_LPC11xx.o(.text) referenced from startup_LPC11xx.o(RESET)
 <LI><a href="#[2f]">FMC_IRQHandler</a> from startup_LPC11xx.o(.text) referenced from startup_LPC11xx.o(RESET)
 <LI><a href="#[18]">HardFault_Handler</a> from startup_LPC11xx.o(.text) referenced from startup_LPC11xx.o(RESET)
 <LI><a href="#[23]">I2C_IRQHandler</a> from startup_LPC11xx.o(.text) referenced from startup_LPC11xx.o(RESET)
 <LI><a href="#[19]">MemManage_Handler</a> from startup_LPC11xx.o(.text) referenced from startup_LPC11xx.o(RESET)
 <LI><a href="#[17]">NMI_Handler</a> from startup_LPC11xx.o(.text) referenced from startup_LPC11xx.o(RESET)
 <LI><a href="#[33]">PIOINT0_IRQHandler</a> from startup_LPC11xx.o(.text) referenced from startup_LPC11xx.o(RESET)
 <LI><a href="#[32]">PIOINT1_IRQHandler</a> from startup_LPC11xx.o(.text) referenced from startup_LPC11xx.o(RESET)
 <LI><a href="#[31]">PIOINT2_IRQHandler</a> from startup_LPC11xx.o(.text) referenced from startup_LPC11xx.o(RESET)
 <LI><a href="#[30]">PIOINT3_IRQHandler</a> from DrvIOUART.o(.text) referenced from startup_LPC11xx.o(RESET)
 <LI><a href="#[1e]">PendSV_Handler</a> from startup_LPC11xx.o(.text) referenced from startup_LPC11xx.o(RESET)
 <LI><a href="#[16]">Reset_Handler</a> from startup_LPC11xx.o(.text) referenced from startup_LPC11xx.o(RESET)
 <LI><a href="#[28]">SSP0_IRQHandler</a> from startup_LPC11xx.o(.text) referenced from startup_LPC11xx.o(RESET)
 <LI><a href="#[22]">SSP1_IRQHandler</a> from startup_LPC11xx.o(.text) referenced from startup_LPC11xx.o(RESET)
 <LI><a href="#[1c]">SVC_Handler</a> from startup_LPC11xx.o(.text) referenced from startup_LPC11xx.o(RESET)
 <LI><a href="#[1f]">SysTick_Handler</a> from startup_LPC11xx.o(.text) referenced from startup_LPC11xx.o(RESET)
 <LI><a href="#[24]">TIMER16_0_IRQHandler</a> from DrvSysClk.o(.text) referenced from startup_LPC11xx.o(RESET)
 <LI><a href="#[25]">TIMER16_1_IRQHandler</a> from DrvIOUART.o(.text) referenced from startup_LPC11xx.o(RESET)
 <LI><a href="#[26]">TIMER32_0_IRQHandler</a> from DrvTimer.o(.text) referenced from startup_LPC11xx.o(RESET)
 <LI><a href="#[27]">TIMER32_1_IRQHandler</a> from DrvTimer.o(.text) referenced from startup_LPC11xx.o(RESET)
 <LI><a href="#[29]">UART_IRQHandler</a> from DrvUART.o(.text) referenced from startup_LPC11xx.o(RESET)
 <LI><a href="#[2b]">USB_FIQHandler</a> from startup_LPC11xx.o(.text) referenced from startup_LPC11xx.o(RESET)
 <LI><a href="#[2a]">USB_IRQHandler</a> from startup_LPC11xx.o(.text) referenced from startup_LPC11xx.o(RESET)
 <LI><a href="#[1b]">UsageFault_Handler</a> from startup_LPC11xx.o(.text) referenced from startup_LPC11xx.o(RESET)
 <LI><a href="#[20]">WAKEUP_IRQHandler</a> from startup_LPC11xx.o(.text) referenced 13 times from startup_LPC11xx.o(RESET)
 <LI><a href="#[2d]">WDT_IRQHandler</a> from startup_LPC11xx.o(.text) referenced from startup_LPC11xx.o(RESET)
 <LI><a href="#[35]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_LPC11xx.o(.text)
 <LI><a href="#[36]">_sputc</a> from printf1.o(i._sputc) referenced from printf1.o(i.__0sprintf$1)
 <LI><a href="#[34]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[35]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(.text)
</UL>
<P><STRONG><a name="[ae]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[37]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[a1]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[af]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[b0]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[b1]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[b2]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[b3]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[7d]"></a>SectorPrepare</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, DrvFlash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveParameters
</UL>

<P><STRONG><a name="[39]"></a>RamToFalsh</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, DrvFlash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveParameters
</UL>

<P><STRONG><a name="[7e]"></a>blankChk</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, DrvFlash.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveParameters
</UL>

<P><STRONG><a name="[3b]"></a>SectorErasure</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, DrvFlash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveParameters
</UL>

<P><STRONG><a name="[b4]"></a>ReAllocateNVIC</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, DrvFlash.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>main</STRONG> (Thumb, 196 bytes, Stack size 64 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = main &rArr; LoopForFrameFromController &rArr; ParseFrameFromController &rArr; DispalyUpdate &rArr; SetFuncPosition &rArr; SendFrameToMPU &rArr; LoopForFrameToMPU &rArr; IOUART_Send &rArr; IOUARTCharPut
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerInit
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConrtollerPortInit
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoopForFrameFromController
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoopForFrameFromMPU
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoopForMPU
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsConnectedWithMPU
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetConnState
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPageIndexToMPU
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToMPU
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoopForFrameToMPU
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSysTick
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUART_REC
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUART_Open
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoopForLedBlink
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[16]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_LPC11xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_LPC11xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_LPC11xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_LPC11xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_LPC11xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_LPC11xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_LPC11xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_LPC11xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_LPC11xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_LPC11xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC11xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC11xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC11xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>I2C_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC11xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>PIOINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC11xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>PIOINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC11xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>PIOINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC11xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC11xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC11xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>USB_FIQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC11xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC11xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>WAKEUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC11xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_LPC11xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[b5]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[3a]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseFrameFromMPU
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_PLL_Setup
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTOpen
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTimer
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_SysTick
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSysTick
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUARTInit
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOTimerInit
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SectorErasure
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RamToFalsh
</UL>

<P><STRONG><a name="[b6]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[4d]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseFrameFromMPU
</UL>

<P><STRONG><a name="[b7]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[52]"></a>InitRecvObject</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, DrvCAN.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = InitRecvObject
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANOpen
</UL>

<P><STRONG><a name="[4e]"></a>CANOpen</STRONG> (Thumb, 434 bytes, Stack size 32 bytes, DrvCAN.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = CANOpen &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitRecvObject
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConrtollerPortInit
</UL>

<P><STRONG><a name="[54]"></a>CANClose</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, DrvCAN.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[96]"></a>CANSend</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, DrvCAN.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispalyUpdate_CAN
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToController
</UL>

<P><STRONG><a name="[55]"></a>Callback_CanReceived</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, DrvCAN.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Callback_CanReceived &rArr; RecvRawFrameFromController &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecvRawFrameFromController
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_IRQHandler
</UL>

<P><STRONG><a name="[21]"></a>CAN_IRQHandler</STRONG> (Thumb, 366 bytes, Stack size 24 bytes, DrvCAN.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = CAN_IRQHandler &rArr; Callback_CanReceived &rArr; RecvRawFrameFromController &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_CanReceived
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[b8]"></a>GPIOSetValue</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, DrvGPIO.o(.text), UNUSED)

<P><STRONG><a name="[b9]"></a>GPIOGetValue</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, DrvGPIO.o(.text), UNUSED)

<P><STRONG><a name="[ba]"></a>GPIOSetDir</STRONG> (Thumb, 256 bytes, Stack size 12 bytes, DrvGPIO.o(.text), UNUSED)

<P><STRONG><a name="[82]"></a>SetLedBinkFrequency</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, DrvGPIO.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PoweronMPU
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetConnState
</UL>

<P><STRONG><a name="[47]"></a>LoopForLedBlink</STRONG> (Thumb, 130 bytes, Stack size 0 bytes, DrvGPIO.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyncParameters
</UL>

<P><STRONG><a name="[57]"></a>IOUART_Prepare</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, DrvIOUART.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUARTInit
</UL>

<P><STRONG><a name="[3e]"></a>IOUART_Open</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, DrvIOUART.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = IOUART_Open &rArr; IOUARTInit &rArr; IOTimerInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUARTInit
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[59]"></a>IOUART_Send</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, DrvIOUART.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IOUART_Send &rArr; IOUARTCharPut
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUARTCharPut
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoopForFrameToMPU
</UL>

<P><STRONG><a name="[5b]"></a>IOUART_Recv</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, DrvIOUART.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUARTRxFifoLength
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUARTCharGetNonBlocking
</UL>

<P><STRONG><a name="[5f]"></a>IOTX0_OUT</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, DrvIOUART.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUARTHandle
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOPort0Init
</UL>

<P><STRONG><a name="[aa]"></a>IORX0_IN</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, DrvIOUART.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUARTHandle
</UL>

<P><STRONG><a name="[60]"></a>IORX0_OPEN</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, DrvIOUART.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUARTHandle
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOPort0Init
</UL>

<P><STRONG><a name="[a3]"></a>IORX0_CLOSE</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, DrvIOUART.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOEINT0_IRQHandler
</UL>

<P><STRONG><a name="[5e]"></a>IOPort0Init</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, DrvIOUART.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IOPort0Init &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IORX0_OPEN
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOTX0_OUT
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUARTInit
</UL>

<P><STRONG><a name="[30]"></a>PIOINT3_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, DrvIOUART.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PIOINT3_IRQHandler &rArr; IOEINT0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOEINT0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[a4]"></a>IOTimer_INT_CLR</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, DrvIOUART.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOTimer_IRQHandler
</UL>

<P><STRONG><a name="[a2]"></a>IOTimer_OPEN</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, DrvIOUART.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUARTCharPut
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOEINT0_IRQHandler
</UL>

<P><STRONG><a name="[65]"></a>IOTimer_CLOSE</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, DrvIOUART.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUARTHandle
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOTimerInit
</UL>

<P><STRONG><a name="[64]"></a>IOTimerInit</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, DrvIOUART.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = IOTimerInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOTimer_CLOSE
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUARTInit
</UL>

<P><STRONG><a name="[25]"></a>TIMER16_1_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, DrvIOUART.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIMER16_1_IRQHandler &rArr; IOTimer_IRQHandler &rArr; IOUARTHandle
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOTimer_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>IOUART_REC</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, DrvIOUART.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IOUART_REC &rArr; IOUARTCharGetNonBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecvDataFromMPU
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUARTRxFifoLength
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUARTCharGetNonBlocking
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24]"></a>TIMER16_0_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, DrvSysClk.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = TIMER16_0_IRQHandler &rArr; Callback_SysTick &rArr; SendFrameToMPU &rArr; LoopForFrameToMPU &rArr; IOUART_Send &rArr; IOUARTCharPut
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_SysTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>GetElapsedTime</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, DrvSysClk.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoopForFrameFromController
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessButton
</UL>

<P><STRONG><a name="[3d]"></a>StartSysTick</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, DrvSysClk.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = StartSysTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[bb]"></a>StopSysTick</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, DrvSysClk.o(.text), UNUSED)

<P><STRONG><a name="[7f]"></a>Delay</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, DrvSysClk.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveParameters
</UL>

<P><STRONG><a name="[6a]"></a>SetTimeout</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, DrvSysClk.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[bc]"></a>IsTimeout</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, DrvSysClk.o(.text), UNUSED)

<P><STRONG><a name="[6b]"></a>StartTimer</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, DrvTimer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = StartTimer &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerInit
</UL>

<P><STRONG><a name="[6e]"></a>StopTimer</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, DrvTimer.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>

<P><STRONG><a name="[26]"></a>TIMER32_0_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, DrvTimer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER32_0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_Timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIMER32_1_IRQHandler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, DrvTimer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER32_1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_Timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>UARTOpen</STRONG> (Thumb, 272 bytes, Stack size 48 bytes, DrvUART.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>

<P><STRONG><a name="[74]"></a>UARTClose</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, DrvUART.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>

<P><STRONG><a name="[bd]"></a>UARTReceive</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, DrvUART.o(.text), UNUSED)

<P><STRONG><a name="[95]"></a>UARTSend</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, DrvUART.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCallToController
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseFrameFromController
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToController
</UL>

<P><STRONG><a name="[75]"></a>Callback_UartReceived</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, DrvUART.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Callback_UartReceived &rArr; RecvRawDataFromController
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecvRawDataFromController
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IRQHandler
</UL>

<P><STRONG><a name="[29]"></a>UART_IRQHandler</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, DrvUART.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = UART_IRQHandler &rArr; Callback_UartReceived &rArr; RecvRawDataFromController
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_UartReceived
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_LPC11xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>Main_PLL_Setup</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, system_LPC11xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Main_PLL_Setup &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[3c]"></a>SystemInit</STRONG> (Thumb, 244 bytes, Stack size 48 bytes, system_LPC11xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SystemInit &rArr; Main_PLL_Setup &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_PLL_Setup
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[49]"></a>LoopForFrameToMPU</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, logic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LoopForFrameToMPU &rArr; IOUART_Send &rArr; IOUARTCharPut
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUARTCharPut
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUART_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToMPU
</UL>

<P><STRONG><a name="[45]"></a>SendFrameToMPU</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, logic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SendFrameToMPU &rArr; LoopForFrameToMPU &rArr; IOUART_Send &rArr; IOUARTCharPut
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoopForFrameToMPU
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispalyUpdate_CAN
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispalyUpdate
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFuncPosition
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_COPPAD_Changed
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_LOPPAD_Changed
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_FLRPAD_Changed
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_BACKGROUND_Changed
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_DATETIME_Changed
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_FUNCTION_Changed
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_ARROW_Changed
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_FLOOR_Changed
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessButton
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseFrameFromMPU
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LightButton
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPageIndexToMPU
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUiTextToMPU
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_SysTick
</UL>

<P><STRONG><a name="[78]"></a>SetUiTextToMPU</STRONG> (Thumb, 46 bytes, Stack size 80 bytes, logic.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToMPU
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModifyMenuValue
</UL>

<P><STRONG><a name="[79]"></a>ModifyMenuValue</STRONG> (Thumb, 2666 bytes, Stack size 56 bytes, logic.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUiTextToMPU
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyncParameters
</UL>

<P><STRONG><a name="[7c]"></a>SaveParameters</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, logic.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SectorErasure
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blankChk
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RamToFalsh
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SectorPrepare
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadParameters
</UL>

<P><STRONG><a name="[80]"></a>LoadParameters</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, logic.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveParameters
</UL>

<P><STRONG><a name="[42]"></a>SendPageIndexToMPU</STRONG> (Thumb, 38 bytes, Stack size 80 bytes, logic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SendPageIndexToMPU &rArr; SendFrameToMPU &rArr; LoopForFrameToMPU &rArr; IOUART_Send &rArr; IOUARTCharPut
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToMPU
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserParameters
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SyncParameters
</UL>

<P><STRONG><a name="[81]"></a>SyncParameters</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, logic.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPageIndexToMPU
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModifyMenuValue
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoopForLedBlink
</UL>

<P><STRONG><a name="[41]"></a>SetConnState</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, logic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetConnState
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLedBinkFrequency
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoopForMPU
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceivedFromMPU
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PoweronMPU
</UL>

<P><STRONG><a name="[83]"></a>PoweronMPU</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, logic.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetConnState
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLedBinkFrequency
</UL>

<P><STRONG><a name="[be]"></a>RestartMPU</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, logic.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>IsConnectedWithMPU</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, logic.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[84]"></a>ReceivedFromMPU</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, logic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ReceivedFromMPU &rArr; SetConnState
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetConnState
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseFrameFromMPU
</UL>

<P><STRONG><a name="[48]"></a>LoopForMPU</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, logic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LoopForMPU &rArr; SetConnState
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetConnState
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[67]"></a>RecvDataFromMPU</STRONG> (Thumb, 262 bytes, Stack size 4 bytes, logic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RecvDataFromMPU &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUART_REC
</UL>

<P><STRONG><a name="[86]"></a>LightButton</STRONG> (Thumb, 60 bytes, Stack size 72 bytes, logic.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToMPU
</UL>

<P><STRONG><a name="[87]"></a>ParseFrameFromMPU</STRONG> (Thumb, 910 bytes, Stack size 40 bytes, logic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ParseFrameFromMPU &rArr; SendFrameToMPU &rArr; LoopForFrameToMPU &rArr; IOUART_Send &rArr; IOUARTCharPut
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceivedFromMPU
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToMPU
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoopForFrameFromMPU
</UL>

<P><STRONG><a name="[8d]"></a>GetEffectFromList</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, logic.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_ARROW_Changed
</UL>

<P><STRONG><a name="[8e]"></a>AddEffectToList</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, logic.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_ARROW_Changed
</UL>

<P><STRONG><a name="[88]"></a>ProcessButton</STRONG> (Thumb, 64 bytes, Stack size 80 bytes, logic.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToMPU
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetElapsedTime
</UL>

<P><STRONG><a name="[8a]"></a>LoopForUILogicOfMPU</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, logic.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoopForFrameFromMPU
</UL>

<P><STRONG><a name="[4a]"></a>LoopForFrameFromMPU</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, logic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = LoopForFrameFromMPU &rArr; ParseFrameFromMPU &rArr; SendFrameToMPU &rArr; LoopForFrameToMPU &rArr; IOUART_Send &rArr; IOUARTCharPut
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoopForUILogicOfMPU
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseFrameFromMPU
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[0]"></a>Callback_LUMINARY_Changed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, logic.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> logic.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>Callback_VOLUME_Changed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, logic.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> logic.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>Callback_FLOOR_Changed</STRONG> (Thumb, 614 bytes, Stack size 88 bytes, logic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Callback_FLOOR_Changed &rArr; SendFrameToMPU &rArr; LoopForFrameToMPU &rArr; IOUART_Send &rArr; IOUARTCharPut
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAscii
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAsciiPic
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToMPU
</UL>
<BR>[Address Reference Count : 1]<UL><LI> logic.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>Callback_ARROW_Changed</STRONG> (Thumb, 486 bytes, Stack size 112 bytes, logic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Callback_ARROW_Changed &rArr; SendFrameToMPU &rArr; LoopForFrameToMPU &rArr; IOUART_Send &rArr; IOUARTCharPut
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddEffectToList
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEffectFromList
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToMPU
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> logic.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>Callback_FUNCTION_Changed</STRONG> (Thumb, 124 bytes, Stack size 88 bytes, logic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Callback_FUNCTION_Changed &rArr; SendFrameToMPU &rArr; LoopForFrameToMPU &rArr; IOUART_Send &rArr; IOUARTCharPut
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToMPU
</UL>
<BR>[Address Reference Count : 1]<UL><LI> logic.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>Callback_FLOOR_2_Changed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, logic.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> logic.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>Callback_ARROW_2_Changed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, logic.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> logic.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>Callback_FUNCTION_2_Changed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, logic.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> logic.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>Callback_VIDEO_Changed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, logic.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> logic.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>Callback_IMAGE_Changed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, logic.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> logic.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>Callback_AUDIO_Changed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, logic.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> logic.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>Callback_TEXT_Changed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, logic.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> logic.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>Callback_PERSON_Changed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, logic.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> logic.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>Callback_LOADCAPACITY_Changed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, logic.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> logic.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>Callback_LOGO_Changed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, logic.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> logic.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>Callback_DATETIME_Changed</STRONG> (Thumb, 62 bytes, Stack size 88 bytes, logic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Callback_DATETIME_Changed &rArr; SendFrameToMPU &rArr; LoopForFrameToMPU &rArr; IOUART_Send &rArr; IOUARTCharPut
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToMPU
</UL>
<BR>[Address Reference Count : 1]<UL><LI> logic.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>Callback_BACKGROUND_Changed</STRONG> (Thumb, 58 bytes, Stack size 88 bytes, logic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Callback_BACKGROUND_Changed &rArr; SendFrameToMPU &rArr; LoopForFrameToMPU &rArr; IOUART_Send &rArr; IOUARTCharPut
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToMPU
</UL>
<BR>[Address Reference Count : 1]<UL><LI> logic.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>Callback_WEATHER_Changed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, logic.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> logic.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>Callback_TEMPERATURE_Changed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, logic.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> logic.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>Callback_FLRPAD_Changed</STRONG> (Thumb, 156 bytes, Stack size 104 bytes, logic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Callback_FLRPAD_Changed &rArr; SendFrameToMPU &rArr; LoopForFrameToMPU &rArr; IOUART_Send &rArr; IOUARTCharPut
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToMPU
</UL>
<BR>[Address Reference Count : 1]<UL><LI> logic.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>Callback_LOPPAD_Changed</STRONG> (Thumb, 186 bytes, Stack size 88 bytes, logic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Callback_LOPPAD_Changed &rArr; SendFrameToMPU &rArr; LoopForFrameToMPU &rArr; IOUART_Send &rArr; IOUARTCharPut
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToMPU
</UL>
<BR>[Address Reference Count : 1]<UL><LI> logic.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>Callback_COPPAD_Changed</STRONG> (Thumb, 126 bytes, Stack size 88 bytes, logic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Callback_COPPAD_Changed &rArr; SendFrameToMPU &rArr; LoopForFrameToMPU &rArr; IOUART_Send &rArr; IOUARTCharPut
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToMPU
</UL>
<BR>[Address Reference Count : 1]<UL><LI> logic.o(.data)
</UL>
<P><STRONG><a name="[8f]"></a>WriteMPUData</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, logic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = WriteMPUData &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispalyUpdate
</UL>

<P><STRONG><a name="[bf]"></a>ReadMPUData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, logic.o(.text), UNUSED)

<P><STRONG><a name="[c0]"></a>SetFrameIntervalOfController</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, logic.o(.text), UNUSED)

<P><STRONG><a name="[91]"></a>SetFrameHeaderOfController</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, logic.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[92]"></a>SetFrameFooterOfController</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, logic.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[76]"></a>RecvRawDataFromController</STRONG> (Thumb, 84 bytes, Stack size 12 bytes, logic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RecvRawDataFromController
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_UartReceived
</UL>

<P><STRONG><a name="[56]"></a>RecvRawFrameFromController</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, logic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = RecvRawFrameFromController &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_CanReceived
</UL>

<P><STRONG><a name="[4b]"></a>LoopForFrameFromController</STRONG> (Thumb, 328 bytes, Stack size 24 bytes, logic.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = LoopForFrameFromController &rArr; ParseFrameFromController &rArr; DispalyUpdate &rArr; SetFuncPosition &rArr; SendFrameToMPU &rArr; LoopForFrameToMPU &rArr; IOUART_Send &rArr; IOUARTCharPut
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseFrameFromController
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetElapsedTime
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[94]"></a>SendFrameToController</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, logic.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANSend
</UL>

<P><STRONG><a name="[68]"></a>Callback_SysTick</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, user.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Callback_SysTick &rArr; SendFrameToMPU &rArr; LoopForFrameToMPU &rArr; IOUART_Send &rArr; IOUARTCharPut
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToMPU
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER16_0_IRQHandler
</UL>

<P><STRONG><a name="[9d]"></a>CRC16_Modbus</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, user.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CRC16_Modbus
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseFrameFromController
</UL>

<P><STRONG><a name="[97]"></a>UserParameters</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, user.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPageIndexToMPU
</UL>

<P><STRONG><a name="[3f]"></a>TimerInit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, user.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TimerInit &rArr; StartTimer &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[70]"></a>Callback_Timer</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, user.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER32_1_IRQHandler
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER32_0_IRQHandler
</UL>

<P><STRONG><a name="[40]"></a>ConrtollerPortInit</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, user.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ConrtollerPortInit &rArr; CANOpen &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANOpen
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8b]"></a>IsAscii</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, user.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_FLOOR_Changed
</UL>

<P><STRONG><a name="[8c]"></a>GetAsciiPic</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, user.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_FLOOR_Changed
</UL>

<P><STRONG><a name="[99]"></a>yihuo_value</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, user.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendCallToController
</UL>

<P><STRONG><a name="[98]"></a>SendCallToController</STRONG> (Thumb, 288 bytes, Stack size 24 bytes, user.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;yihuo_value
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
</UL>

<P><STRONG><a name="[c1]"></a>Flr_pro</STRONG> (Thumb, 84 bytes, Stack size 12 bytes, user.o(.text), UNUSED)

<P><STRONG><a name="[9a]"></a>SetFuncPosition</STRONG> (Thumb, 760 bytes, Stack size 24 bytes, user.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SetFuncPosition &rArr; SendFrameToMPU &rArr; LoopForFrameToMPU &rArr; IOUART_Send &rArr; IOUARTCharPut
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToMPU
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispalyUpdate
</UL>

<P><STRONG><a name="[9b]"></a>DispalyUpdate</STRONG> (Thumb, 536 bytes, Stack size 88 bytes, user.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = DispalyUpdate &rArr; SetFuncPosition &rArr; SendFrameToMPU &rArr; LoopForFrameToMPU &rArr; IOUART_Send &rArr; IOUARTCharPut
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFuncPosition
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteMPUData
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToMPU
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseFrameFromController
</UL>

<P><STRONG><a name="[9c]"></a>DispalyUpdate_CAN</STRONG> (Thumb, 496 bytes, Stack size 96 bytes, user.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = DispalyUpdate_CAN &rArr; SendFrameToMPU &rArr; LoopForFrameToMPU &rArr; IOUART_Send &rArr; IOUARTCharPut
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToMPU
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANSend
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParseFrameFromController
</UL>

<P><STRONG><a name="[93]"></a>ParseFrameFromController</STRONG> (Thumb, 200 bytes, Stack size 48 bytes, user.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = ParseFrameFromController &rArr; DispalyUpdate &rArr; SetFuncPosition &rArr; SendFrameToMPU &rArr; LoopForFrameToMPU &rArr; IOUART_Send &rArr; IOUARTCharPut
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispalyUpdate_CAN
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispalyUpdate
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC16_Modbus
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoopForFrameFromController
</UL>

<P><STRONG><a name="[c2]"></a>CallElevatorToController</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, user.o(.text), UNUSED)

<P><STRONG><a name="[44]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFrameFooterOfController
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFrameHeaderOfController
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteMPUData
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUiTextToMPU
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFrameToMPU
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecvRawFrameFromController
</UL>

<P><STRONG><a name="[51]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispalyUpdate_CAN
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispalyUpdate
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_BACKGROUND_Changed
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_DATETIME_Changed
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_FUNCTION_Changed
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_ARROW_Changed
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_FLOOR_Changed
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPageIndexToMPU
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANOpen
</UL>

<P><STRONG><a name="[c3]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[9f]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[c4]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[c5]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[9e]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[7a]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_ARROW_Changed
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModifyMenuValue
</UL>

<P><STRONG><a name="[c6]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[a0]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[43]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModifyMenuValue
</UL>

<P><STRONG><a name="[90]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoopForFrameFromController
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteMPUData
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecvRawFrameFromController
</UL>

<P><STRONG><a name="[38]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[c7]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[c8]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[c9]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[63]"></a>IOEINT0_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, iouart.o(i.IOEINT0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IOEINT0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOTimer_OPEN
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IORX0_CLOSE
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIOINT3_IRQHandler
</UL>

<P><STRONG><a name="[66]"></a>IOTimer_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, iouart.o(i.IOTimer_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = IOTimer_IRQHandler &rArr; IOUARTHandle
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUARTHandle
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOTimer_INT_CLR
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER16_1_IRQHandler
</UL>

<P><STRONG><a name="[5d]"></a>IOUARTCharGetNonBlocking</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, iouart.o(i.IOUARTCharGetNonBlocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IOUARTCharGetNonBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queueRead
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queueNData
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUART_REC
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUART_Recv
</UL>

<P><STRONG><a name="[5a]"></a>IOUARTCharPut</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, iouart.o(i.IOUARTCharPut))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IOUARTCharPut
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queueWrite
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queueSize
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queueNData
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOTimer_OPEN
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoopForFrameToMPU
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUART_Send
</UL>

<P><STRONG><a name="[a5]"></a>IOUARTHandle</STRONG> (Thumb, 294 bytes, Stack size 16 bytes, iouart.o(i.IOUARTHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IOUARTHandle
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queueWrite
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queueRead
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queueNData
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOTimer_CLOSE
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IORX0_OPEN
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IORX0_IN
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOTX0_OUT
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOTimer_IRQHandler
</UL>

<P><STRONG><a name="[58]"></a>IOUARTInit</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, iouart.o(i.IOUARTInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = IOUARTInit &rArr; IOTimerInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queueCreate
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOTimerInit
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOPort0Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUART_Open
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUART_Prepare
</UL>

<P><STRONG><a name="[5c]"></a>IOUARTRxFifoLength</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, iouart.o(i.IOUARTRxFifoLength))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IOUARTRxFifoLength
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;queueNData
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUART_REC
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUART_Recv
</UL>

<P><STRONG><a name="[ac]"></a>__0sprintf$1</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf1.o(i.__0sprintf$1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[ca]"></a>__1sprintf$1</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0sprintf$1), UNUSED)

<P><STRONG><a name="[7b]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0sprintf$1), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModifyMenuValue
</UL>

<P><STRONG><a name="[85]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, logic.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DispalyUpdate
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecvDataFromMPU
</UL>

<P><STRONG><a name="[cb]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[cc]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[4f]"></a>free</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANClose
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANOpen
</UL>

<P><STRONG><a name="[50]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteMPUData
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback_ARROW_Changed
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetTimeout
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANOpen
</UL>

<P><STRONG><a name="[ab]"></a>queueCreate</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, queue.o(i.queueCreate))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUARTInit
</UL>

<P><STRONG><a name="[a6]"></a>queueNData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, queue.o(i.queueNData))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUARTHandle
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUARTRxFifoLength
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUARTCharPut
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUARTCharGetNonBlocking
</UL>

<P><STRONG><a name="[a7]"></a>queueRead</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, queue.o(i.queueRead))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUARTHandle
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUARTCharGetNonBlocking
</UL>

<P><STRONG><a name="[a8]"></a>queueSize</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, queue.o(i.queueSize))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUARTCharPut
</UL>

<P><STRONG><a name="[a9]"></a>queueWrite</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, queue.o(i.queueWrite))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUARTHandle
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOUARTCharPut
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[53]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, DrvCAN.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CANOpen
</UL>

<P><STRONG><a name="[61]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, DrvIOUART.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOTimerInit
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOPort0Init
</UL>

<P><STRONG><a name="[62]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, DrvIOUART.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOTimerInit
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IOPort0Init
</UL>

<P><STRONG><a name="[69]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, DrvSysClk.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSysTick
</UL>

<P><STRONG><a name="[6d]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, DrvTimer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTimer
</UL>

<P><STRONG><a name="[6c]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, DrvTimer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTimer
</UL>

<P><STRONG><a name="[6f]"></a>NVIC_DisableIRQ</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, DrvTimer.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopTimer
</UL>

<P><STRONG><a name="[72]"></a>NVIC_DisableIRQ</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, DrvUART.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTClose
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTOpen
</UL>

<P><STRONG><a name="[73]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, DrvUART.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTOpen
</UL>

<P><STRONG><a name="[ad]"></a>_printf_core</STRONG> (Thumb, 332 bytes, Stack size 88 bytes, printf1.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$1
</UL>

<P><STRONG><a name="[36]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf1.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf1.o(i.__0sprintf$1)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
